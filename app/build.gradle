plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id "com.google.protobuf" version "0.9.1"
    id 'kotlin-kapt'
}

android {
    namespace 'com.qwant.android.qwantbrowser'
    compileSdk 34

    defaultConfig {
        applicationId "com.qwant.liberty"
        minSdk 21
        targetSdk 34
        versionCode 50000290
        versionName "5.0.0.29"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }

        resourceConfigurations += ["en", "fr", "de", "es", "it"]
    }
    bundle {
        density {
            enableSplit true
        }
        abi {
            enableSplit true
        }
        language {
            enableSplit = false
        }
    }
    splits {
        abi {
            enable true
            reset()
            include "x86", "armeabi-v7a", "arm64-v8a", "x86_64"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        internal {
            initWith(debug)
            applicationIdSuffix ".internal"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions += "target"
    productFlavors {
        playstore {
            dimension "target"
        }
        sfr {
            dimension "target"
            versionCode = 100000 + (android.defaultConfig.versionCode ?: 0)
        }
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += ['-Xjvm-default=all-compatibility', '-opt-in=kotlin.RequiresOptIn']
    }
    kotlin {
        jvmToolchain(17)
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    // To include every files in the assets folder (and not ignore VIP)
    aaptOptions {
        ignoreAssetsPattern  '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
    }
}

dependencies {
    // Legacy Onboarding
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    // Legacy assistant
    implementation 'com.google.android.material:material:1.10.0'
    // Old preferences for migration. Remove after migration is complete
    implementation 'androidx.preference:preference-ktx:1.2.1'

    // Android
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-process:2.6.2'
    implementation 'androidx.datastore:datastore:1.0.0'
    implementation 'androidx.paging:paging-runtime-ktx:3.2.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'

    // Protobuf
    implementation  "com.google.protobuf:protobuf-javalite:3.21.10"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt 'androidx.hilt:hilt-compiler:1.1.0'

    // Compose
    implementation 'androidx.activity:activity-compose:1.8.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-viewbinding:1.6.0-alpha08"
    implementation "androidx.navigation:navigation-compose:$compose_nav_version"
    implementation "androidx.compose.animation:animation-graphics:$compose_version"
    implementation "androidx.paging:paging-compose:3.2.1"

    // Compose debug
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_tooling_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_tooling_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.6.0-beta01"

    // Material
    implementation "androidx.compose.material3:material3:1.2.0-alpha08"

    // Room
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    // implementation("androidx.room:room-paging:$room_version")
    kapt "androidx.room:room-compiler:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // Mozac
    implementation "org.mozilla.components:concept-engine:$mozac_version"
    implementation "org.mozilla.components:browser-engine-gecko:$mozac_version"
    implementation "org.mozilla.components:browser-state:$mozac_version"
    implementation "org.mozilla.components:browser-session-storage:$mozac_version"
    implementation "org.mozilla.components:browser-thumbnails:$mozac_version"
    implementation "org.mozilla.components:browser-icons:$mozac_version"
    implementation "org.mozilla.components:feature-session:$mozac_version"
    implementation "org.mozilla.components:feature-tabs:$mozac_version"
    implementation "org.mozilla.components:feature-contextmenu:$mozac_version"
    implementation "org.mozilla.components:feature-sitepermissions:$mozac_version"
    implementation "org.mozilla.components:feature-downloads:$mozac_version"
    implementation "org.mozilla.components:feature-app-links:$mozac_version"
    implementation "org.mozilla.components:feature-prompts:$mozac_version"
    implementation "org.mozilla.components:feature-pwa:$mozac_version"
    implementation "org.mozilla.components:feature-intent:$mozac_version"
    implementation "org.mozilla.components:feature-webcompat:$mozac_version"
    implementation "org.mozilla.components:support-utils:$mozac_version"
    implementation "org.mozilla.components:support-ktx:$mozac_version"
    implementation "org.mozilla.components:support-rusthttp:$mozac_version"
    implementation "org.mozilla.components:support-webextensions:$mozac_version"
    implementation "org.mozilla.components:ui-widgets:$mozac_version" // SnackbarDelegate

    implementation "org.mozilla.components:ui-icons:$mozac_version" // Permission feature icons // TODO remove this dependencie after replacing with our icons

    // implementation "org.mozilla.components:concept-awesomebar:$mozac_version" // Suggest
    // implementation "org.mozilla.components:feature-awesomebar:$mozac_version" // Suggest
    // implementation "org.mozilla.telemetry:glean-native:52.2.0"
    // implementation "org.mozilla.geckoview:geckoview-beta-omni:$mozac_version" // feature-awesomebar deps
    // implementation "org.mozilla.telemetry:glean-native:$mozac_version" // feature-awesomebar deps

    // Piwik
    implementation 'pro.piwik:sdk-framework-android:1.2.0'

    // Tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation("androidx.room:room-testing:$room_version")
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_tooling_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$compose_nav_version"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.9.2"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}
